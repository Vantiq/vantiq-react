buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["VantiqInterfaceLibrary_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
    mavenLocal()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:8.0.1"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

plugins {
  id 'maven-publish'
}

repositories {
  mavenCentral()
  mavenLocal()
}

def reactNativeArchitectures() {
  def value = rootProject.getProperties().get("reactNativeArchitectures")
  return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}


apply plugin: "com.android.library"
apply plugin: "kotlin-android"

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["VantiqInterfaceLibrary_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["VantiqInterfaceLibrary_" + name]).toInteger()
}

def supportsNamespace() {
  def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  return (major == 7 && minor >= 3) || major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "com.vantiqinterfacelibrary"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    manifestPlaceholders = [appAuthRedirectScheme:"xxx.vantiq.mobile"] // Not used, but has to be here to prevent compile errors
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
  }
}

repositories {
  mavenCentral()
  google()
  mavenLocal()
}

def kotlin_version = getExtOrDefault("kotlinVersion")


project.afterEvaluate {
  publishing {
    publications {
      libraryProject(MavenPublication) {
        setGroupId 'io.vantiq.vantiqinterfacelibrary'
        setArtifactId 'networking-release'
        version '1.0'
        artifact bundleReleaseAar
      }
    }
  }
}

dependencies {
  //
  //   This matches the "example" app
  //
  implementation 'com.facebook.react:react-android:0.75.3'

  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  implementation 'androidx.appcompat:appcompat:1.6.1'
  implementation 'com.google.android.material:material:1.10.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
  implementation 'androidx.navigation:navigation-fragment:2.6.0'
  implementation 'androidx.navigation:navigation-ui:2.6.0'
  implementation 'androidx.activity:activity:1.8.0'

  implementation 'net.openid:appauth:0.11.1'

  implementation 'io.vantiq:vantiq-sdk:1.2.2'

  implementation 'joda-time:joda-time:2.8.2'

  implementation 'com.auth0.android:jwtdecode:+'

  //implementation files("/Users/steve/dev/RN/VantiqAndroidLibrary/lib/build/outputs/aar/lib-debug.aar")

  //
  //  The Vantiq Android Library - for now this is just in maven local
  //
  implementation 'io.vantiq:vantiq-ui-android:+'
}


